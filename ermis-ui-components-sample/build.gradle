import network.ermis.Configuration
import network.ermis.Dependencies

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'shot'
apply plugin: 'com.google.devtools.ksp'

apply from: "${rootDir}/scripts/android.gradle"

android {
    namespace "network.ermis.chat.ui.sample"
    defaultConfig {
        targetSdk Configuration.sampleTargetSdk
        applicationId "com.chat.ermis"
        versionCode sampleAppVersionCode
        versionName sampleAppVersionName
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    File signFile = rootProject.file('.sign/keystore.properties')
    if (signFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signFile))
        signingConfigs {
            release {
                storeFile rootProject.file(properties['keystore'])
                storePassword properties['storePassword']
                keyAlias properties['keyAlias']
                keyPassword properties['keyPassword']
            }
        }
    } else {
        signingConfigs {
            release {
                storeFile rootProject.file('.sign/debug.keystore')
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
        }
    }

    signingConfigs.debug {
        storeFile rootProject.file('.sign/debug.keystore')
        storePassword 'android'
        keyAlias 'androiddebugkey'
        keyPassword 'android'
    }

    buildTypes {
        debug {
            resValue "string", "app_name", "Ermis Debug"
            versionNameSuffix "-DEBUG"
            applicationIdSuffix ".debug"
            testCoverageEnabled false
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            resValue "string", "app_name", "Ermis Product"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
        }
        full {
            dimension "version"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (variant.buildType.name == "debug" && names.contains("full")) {
            setIgnore(true)
        }
    }

    lintOptions {
        abortOnError false
        xmlReport true
        checkDependencies true
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                '-opt-in=kotlin.RequiresOptIn',
        ]
    }
}

shot {
    applicationId = "com.chat.ermis"
}

repositories {
    // huawei maven
    maven {
        url 'https://developer.huawei.com/repo/'
        content {
            includeGroup("com.huawei.agconnect")
            includeGroup("com.huawei.android.hms")
            includeGroup("com.huawei.hms")
            includeGroup("com.huawei.hmf")
        }
    }
}

dependencies {
    implementation project(":ermis-chat-ui-components")
    implementation project(":ermis-chat-markdown")
    implementation project(":ermis-chat-offline")

    implementation(platform("com.walletconnect:android-bom:1.31.4"))
    implementation("com.walletconnect:android-core")
    implementation("com.walletconnect:web3modal")

    implementation "com.coinbase:coinbase-wallet-sdk:1.0.4"
    implementation 'com.google.firebase:firebase-messaging-directboot:24.0.0'
    implementation Dependencies.firebaseMessaging

    implementation Dependencies.moshi
    implementation Dependencies.retrofitMoshiConverter
    ksp Dependencies.moshiCodegen
    implementation Dependencies.retrofit

    implementation Dependencies.streamLog
    implementation Dependencies.androidxActivityKtx
    implementation Dependencies.androidxAppCompat
    implementation Dependencies.androidxCoreKtx
    implementation Dependencies.androidxLifecycleLiveDataKtx
    implementation Dependencies.androidxPreferences
    implementation Dependencies.constraintLayout
    implementation Dependencies.androidxFragmentKtx
    implementation Dependencies.materialComponents

    implementation Dependencies.navigationRuntimeKTX
    implementation Dependencies.navigationFragmentKTX
    implementation Dependencies.navigationUIKTX

    implementation Dependencies.firebaseAnalytics
    implementation Dependencies.firebaseCrashlytics

    implementation Dependencies.coil
    implementation Dependencies.coilGif
    implementation Dependencies.shimmer

    debugImplementation Dependencies.flipper
    debugImplementation Dependencies.flipperNetwork
    debugImplementation Dependencies.flipperLoader
    debugImplementation Dependencies.fragmentTest

    detektPlugins(Dependencies.detektFormatting)
}
